#include <GL/gl.h>
#include <GL/glu.h>
#include <stdlib.h>
#include <GL/glut.h>


int i;
void drawBitmapText(char *string, float x, float y, float z)
{
	char *c;
	glRasterPos2f(x, y);
	for (c=string; *c != '\0'; c++)
	{
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, *c);
	}
}
void init(void)
{
   glClearColor(1.0, 0.0, 0.0, 0.0);
}

void draw(GLfloat ctrlpoints[4][3])
{
	 glShadeModel(GL_FLAT);
   glMap1f(GL_MAP1_VERTEX_3, 0.0, 1.0, 3, 4, &ctrlpoints[0][0]);
   glEnable(GL_MAP1_VERTEX_3);
   //glClear(GL_COLOR_BUFFER_BIT);
   glColor3f(1.0, 0.0, 1.0);
   glPointSize(4.0);
   glBegin(GL_LINE_STRIP);
      for (i = 0; i <= 30; i++) 
         glEvalCoord1f((GLfloat) i/30.0);
   glEnd();
   /* The following code displays the control points as dots. */
  /* glPointSize(5.0);
   glColor3f(1.0, 1.0, 0.0);
   glBegin(GL_POINTS);
      for (i = 0; i < 4; i++) 
         glVertex3fv(&ctrlpoints[i][0]);
   glEnd();*/
   glColor3f(1, 1, 1);
	drawBitmapText("Amaan Ansari || 500067262", -2.2, 0.5, 0);
   glFlush();
	
}

void display(void)
{
   int i;
   glPointSize(4.0);
   GLfloat ctrlpoints[4][3] = {
        { -0.61, 1.99, 0.0}, { 0.02, 4.88, 0.0}, 
        {0.16, 5, 0.0}, {0.67, 1.99, 0.0}};
        draw(ctrlpoints);
        
           GLfloat ctrlpoints2[4][3] = {
        { 0.67, 1.99, 0.0}, { 0.99, 1.58, 0.0}, 
        {0.16, 5, 0.0}, {-0.37, 2.99, 0.0}};

        draw(ctrlpoints2);
        
        GLfloat ctrlpoints3[4][3] = {
        { -0.37, 2.99, 0.0}, {-0.13, 2.1, 0.0}, 
        {0.13, 2.1, 0.0}, {1.07, 3.00, 0.0}};

        draw(ctrlpoints3);
        
        GLfloat ctrlpoints4[4][3] = {
        { 1.07, 3.00, 0.0}, { 1.85, 3.65, 0.0}, 
        { 1.0, 3.69, 0.0}, { 1.07, 3.00, 0.0}};

        draw(ctrlpoints4);
        
                 GLfloat ctrlpoints5[4][3] = {
        { 1.07, 3.00, 0.0}, { 1.25, 2.75, 0.0}, 
        { 1.25, 2.5, 0.0}, { 1.07, 2.0, 0.0}};
        draw(ctrlpoints5);
        
             GLfloat ctrlpoints6[4][3] = {
        { 1.07, 2.0, 0.0}, { 0.9, 2.2, 0.0}, 
        { 0.9, 2.5, 0.0}, { 1.2, 2.5, 0.0}};
        draw(ctrlpoints6);
        
        GLfloat ctrlpoints7[4][3] = {
        { 1.2, 2.5, 0.0}, { 1.3, 2.30, 0.0}, 
        { 1.7, 2.3, 0.0}, { 2.02, 2.5, 0.0}};
        draw(ctrlpoints7);
        
      GLfloat ctrlpoints8[4][3] = {
        { 2.02, 2.5, 0.0}, { -0.98, 1.80, 0.0}, 
        { -1.00, 1.3, 0.0}, { 2.0, 1.8, 0.0}};
        draw(ctrlpoints8);
        
    
        


   
	  
}

void reshape(int w, int h)
{
   glViewport(0, 0, (GLsizei) w, (GLsizei) h);
   glMatrixMode(GL_PROJECTION);
   glLoadIdentity();
   if (w <= h)
      glOrtho(-5.0, 5.0, -5.0*(GLfloat)h/(GLfloat)w, 
               5.0*(GLfloat)h/(GLfloat)w, -5.0, 5.0);
   else
      glOrtho(-5.0*(GLfloat)w/(GLfloat)h, 
               5.0*(GLfloat)w/(GLfloat)h, -5.0, 5.0, -5.0, 5.0);
   glMatrixMode(GL_MODELVIEW);
   glLoadIdentity();
}

int main(int argc, char** argv)
{
   glutInit(&argc, argv);
   glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
   glutInitWindowSize (500, 500);
   glutInitWindowPosition (100, 100);
   glutCreateWindow ("Bezier Curve || My Signature");
   init ();
   glutDisplayFunc(display);
   glutReshapeFunc(reshape);
   glutMainLoop();
   return 0;
}
